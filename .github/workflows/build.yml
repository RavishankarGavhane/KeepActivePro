name: Deploy KeepActive Pro

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Deploy Static Assets to S3
        run: |
          aws s3 sync ./assets s3://keepactivepro-eu-north-1/assets/ --delete
          aws s3 cp ./index.html s3://keepactivepro-eu-north-1/
          aws s3 cp --recursive ./templates s3://keepactivepro-eu-north-1/templates/

      - name: Invalidate CloudFront Cache
        run: |
          aws cloudfront create-invalidation --distribution-id E1QOO5RD2GS5KC --paths "/*"

  deploy-backend:
    runs-on: ubuntu-latest
    needs: deploy-frontend
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Build Lambda Package
        run: |
          # Create package directory
          mkdir -p backend/package

          # Install dependencies using AWS official Python image
          docker run --rm -v $(pwd):/var/task \
            public.ecr.aws/lambda/python:3.9 \
            /bin/bash -c "\
              pip install --no-cache-dir -r /var/task/backend/requirements.txt -t /var/task/backend/package/ && \
              cp /var/task/backend/*.py /var/task/backend/package/ && \
              mv /var/task/backend/package/main.py /var/task/backend/package/lambda_function.py"

          # Zip package contents
          cd backend/package
          zip -r9 ../fastapi_lambda.zip .

      - name: Deploy Lambda Function
        run: |
          aws lambda update-function-code \
            --function-name KeepActiveProBackend \
            --zip-file fileb://backend/fastapi_lambda.zip

          aws lambda update-function-configuration \
            --function-name KeepActiveProBackend \
            --handler lambda_function.lambda_handler \
            --environment "Variables={
              DB_USER=ravipostgres,
              DB_PASSWORD=Ravi#1234,
              DB_HOST=keepactivepro-db.ct8akq62elqa.eu-north-1.rds.amazonaws.com,
              DB_NAME=postgres,
              DB_PORT=5432
            }" \
            --memory-size 512 \
            --timeout 30

      - name: Deploy API Gateway
        run: |
          API_ID=$(aws apigateway get-rest-apis --query "items[?name=='KeepActiveProAPI'].id" --output text)
          
          # Add CORS configuration
          aws apigateway update-gateway-response \
            --rest-api-id $API_ID \
            --response-type DEFAULT_4XX \
            --patch-operations op=replace,path=/responseParameters/gatewayresponse.header.Access-Control-Allow-Origin,value='https://www.keepactivepro.com'

          # Create deployment
          aws apigateway create-deployment \
            --rest-api-id $API_ID \
            --stage-name prod